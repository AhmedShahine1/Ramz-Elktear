@model ManagerDashboardDto

<div class="container-fluid px-4 py-5">
    <h2 class="text-primary fw-bold mb-4 text-truncate">Manager Dashboard</h2>

    <!-- Key Metrics Cards -->
    <div class="row g-4 mb-5">
        <!-- Total Sales Agents Card -->
        <div class="col-12 col-md-6">
            <div class="card shadow-sm border-0 h-100">
                <div class="card-body d-flex flex-column">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h5 class="card-title text-muted mb-0 text-truncate">Total Sales Agents</h5>
                        <div class="avatar bg-light-primary p-2 rounded">
                            <i class="bx bx-user-circle fs-4 text-primary"></i>
                        </div>
                    </div>
                    <h3 class="fw-bold mb-0">@Model.TotalSalesAgents</h3>
                    <div class="progress mt-3" style="height: 4px;">
                        <div class="progress-bar bg-primary" style="width: 65%"></div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Total Sales Card -->
        <div class="col-12 col-md-6">
            <div class="card shadow-sm border-0 h-100">
                <div class="card-body d-flex flex-column">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h5 class="card-title text-muted mb-0 text-truncate">Total Sales</h5>
                        <div class="avatar bg-light-success p-2 rounded">
                            <i class="bx bx-dollar-circle fs-4 text-success"></i>
                        </div>
                    </div>
                    <h3 class="fw-bold mb-0">@Model.TotalSales</h3>
                    <div class="progress mt-3" style="height: 4px;">
                        <div class="progress-bar bg-success" style="width: 78%"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts Section -->
    <div class="row g-4">
        <!-- Monthly Sales Chart -->
        <div class="col-12 col-lg-6">
            <div class="card shadow-sm border-0 h-100">
                <div class="card-header bg-transparent border-0">
                    <h5 class="card-title mb-0 text-truncate">Monthly Sales Trends</h5>
                    <p class="text-muted small mb-0 text-truncate">Sales performance over time</p>
                </div>
                <div class="card-body">
                    <canvas id="monthlySalesChart" height="300"></canvas>
                </div>
            </div>
        </div>

        <!-- Sales Comparison Chart -->
        <div class="col-12 col-lg-6">
            <div class="card shadow-sm border-0 h-100">
                <div class="card-header bg-transparent border-0">
                    <h5 class="card-title mb-0 text-truncate">Sales by Agent</h5>
                    <p class="text-muted small mb-0 text-truncate">Comparative analysis of agent performance</p>
                </div>
                <div class="card-body">
                    <canvas id="salesComparisonChart" height="300"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
          // Chart color palette
          const colors = {
            primary: '#696cff',
            success: '#71dd37',
            info: '#03c3ec',
            warning: '#ffab00',
            danger: '#ff3e1d',
            secondary: '#8592a3',
            background: 'rgba(67, 89, 113, 0.1)',
            chartColors: [
              '#696cff', '#71dd37', '#03c3ec', '#ffab00', '#ff3e1d',
              '#8592a3', '#696cff80', '#71dd3780', '#03c3ec80', '#ffab0080'
            ]
          };

          // Monthly Sales Chart
          const monthlySalesCtx = document.getElementById('monthlySalesChart').getContext('2d');
          new Chart(monthlySalesCtx, {
            type: 'bar',
            data: {
              labels: @Html.Raw(Json.Serialize(Model.MonthlySales.Select(m => $"{m.Month}/{m.Year}"))),
              datasets: [{
                label: 'Total Sales',
                data: @Html.Raw(Json.Serialize(Model.MonthlySales.Select(m => m.SalesCount))),
                backgroundColor: colors.primary + '80', // 50% opacity
                borderColor: colors.primary,
                borderWidth: 1,
                borderRadius: 4,
                maxBarThickness: 32
              }]
            },
            options: {
              responsive: true,
              maintainAspectRatio: false,
              scales: {
                y: {
                  beginAtZero: true,
                  grid: {
                    color: colors.background
                  }
                },
                x: {
                  grid: {
                    display: false
                  }
                }
              },
              plugins: {
                legend: {
                  display: false
                },
                tooltip: {
                  backgroundColor: '#fff',
                  titleColor: '#566a7f',
                  bodyColor: '#566a7f',
                  borderColor: '#f0f2f8',
                  borderWidth: 1,
                  usePointStyle: true
                }
              }
            }
          });

          // Sales Comparison Chart
          const salesComparisonCtx = document.getElementById('salesComparisonChart').getContext('2d');
          new Chart(salesComparisonCtx, {
            type: 'doughnut',
            data: {
              labels: @Html.Raw(Json.Serialize(Model.SalesComparison.Select(s => s.SalesName))),
              datasets: [{
                label: 'Sales by Agent',
                data: @Html.Raw(Json.Serialize(Model.SalesComparison.Select(s => s.TotalBookings))),
                backgroundColor: colors.chartColors,
                borderWidth: 0,
                cutout: '70%'
              }]
            },
            options: {
              responsive: true,
              maintainAspectRatio: false,
              plugins: {
                legend: {
                  position: 'bottom',
                  labels: {
                    usePointStyle: true,
                    padding: 20
                  }
                },
                tooltip: {
                  callbacks: {
                    label: function(context) {
                      const label = context.label || '';
                      const value = context.formattedValue;
                      const dataset = context.dataset;
                      const total = dataset.data.reduce((acc, data) => acc + data, 0);
                      const percentage = Math.round((context.raw / total) * 100);
                      return `${label}: ${value} (${percentage}%)`;
                    }
                  }
                }
              }
            }
          });
        });
    </script>
}
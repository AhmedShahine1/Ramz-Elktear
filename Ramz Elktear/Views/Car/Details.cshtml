@model CarDTO

@{
    var isRightToLeft = CultureInfo.CurrentCulture.TextInfo.IsRightToLeft;
    var direction = isRightToLeft ? "rtl" : "ltr";
    var textAlign = isRightToLeft ? "text-end" : "text-start";
    var justifyContent = isRightToLeft ? "justify-content-start" : "justify-content-end";
}

<div class="container py-5" dir="@direction">
    <div class="row gx-5">
        <!-- Product Images Gallery -->
        <aside class="col-lg-6 mb-4">
            <div class="border rounded-4 mb-3 d-flex justify-content-center">
                <img id="mainImage"
                     class="rounded-4 img-fluid"
                     style="max-height: 400px; object-fit: contain;"
                     src="@Model.ImageUrl"
                     alt="@(isRightToLeft ? Model.NameAr : Model.NameEn)" />
            </div>
            <div class="d-flex flex-wrap justify-content-center mb-3 gallery-thumbnails">
                @if (Model.ImagesUrl != null && Model.ImagesUrl.Any())
                {
                    @foreach (var imageUrl in Model.ImagesUrl)
                    {
                        <a class="border mx-1 rounded-2 thumbnail-container" onclick="swapImage(this)">
                            <img width="60" height="60" class="rounded-2" src="@imageUrl" alt="@Localizer["CarThumbnail", "Car"]" />
                        </a>
                    }
                }
            </div>
        </aside>

        <!-- Product Information -->
        <main class="col-lg-6">
            <div class="@textAlign">
                <h4 class="title text-dark mb-4">@(isRightToLeft ? Model.NameAr : Model.NameEn)</h4>

                <div class="info-grid mb-4">
                    <div class="info-item">
                        <span class="info-label">@Localizer["CarCode", "Car"]:</span>
                        <span class="info-value">@Model.CarCode</span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">@Localizer["CarSKU", "Car"]:</span>
                        <span class="info-value">@Model.CarSKU</span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">@Localizer["SubCategory", "Car"]:</span>
                        <span class="info-value">@(isRightToLeft ? Model.SubCategory?.NameAr : Model.SubCategory?.NameEn)</span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">@Localizer["Kilometers", "Car"]:</span>
                        <span class="info-value">@Model.Kilometers?.ToString("N0")</span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">@Localizer["InstallmentPrice", "Car"]:</span>
                        <span class="info-value fw-bold text-primary">@Model.InstallmentPrice.ToString("C")</span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">@Localizer["SellingPrice", "Car"]:</span>
                        <span class="info-value fw-bold text-success">@Model.SellingPrice.ToString("C")</span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">@Localizer["Status", "Car"]:</span>
                        <span class="info-value">
                            @if (Model.IsActive)
                            {
                                <span class="badge bg-success">@Localizer["Active", "Common"]</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">@Localizer["Inactive", "Common"]</span>
                            }
                        </span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">@Localizer["Special", "Car"]:</span>
                        <span class="info-value">
                            @if (Model.IsSpecial)
                            {
                                <span class="badge bg-warning text-dark">@Localizer["Yes", "Common"]</span>
                            }
                            else
                            {
                                <span>@Localizer["No", "Common"]</span>
                            }
                        </span>
                    </div>
                    @if (Model.Color != null && Model.Color.Any())
                    {
                        <div class="info-item">
                            <span class="info-label">@Localizer["Color", "Car"]:</span>
                            <span class="d-inline-flex gap-1 align-items-center">
                                @foreach (var color in Model.Color)
                                {
                                    <span class="color-swatch"
                                          style="background-color:@color.Value;"
                                          title="@color.Value"
                                          data-bs-toggle="tooltip"
                                          data-bs-placement="top"></span>
                                }
                            </span>
                        </div>
                    }
                </div>

                <!-- Action Buttons -->
                <div class="d-flex gap-2 flex-wrap">
                    <button class="btn btn-primary">
                        <i class="bx bx-phone"></i>
                        @Localizer["ContactUs", "Common"]
                    </button>
                    <button class="btn btn-outline-primary">
                        <i class="bx bx-heart"></i>
                        @Localizer["AddToWishlist", "Common"]
                    </button>
                    <button class="btn btn-outline-secondary">
                        <i class="bx bx-share"></i>
                        @Localizer["Share", "Common"]
                    </button>
                </div>
            </div>
        </main>
    </div>

    <!-- Tabs Section -->
    <section class="mt-5">
        <ul class="nav nav-tabs" id="carDetailsTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active"
                        id="details-tab"
                        data-bs-toggle="tab"
                        data-bs-target="#details"
                        type="button"
                        role="tab"
                        aria-controls="details"
                        aria-selected="true">
                    <i class="bx bx-info-circle me-1"></i>
                    @Localizer["Details", "Car"]
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link"
                        id="specifications-tab"
                        data-bs-toggle="tab"
                        data-bs-target="#specifications"
                        type="button"
                        role="tab"
                        aria-controls="specifications"
                        aria-selected="false">
                    <i class="bx bx-cog me-1"></i>
                    @Localizer["Specifications", "Car"]
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link"
                        id="offers-tab"
                        data-bs-toggle="tab"
                        data-bs-target="#offers"
                        type="button"
                        role="tab"
                        aria-controls="offers"
                        aria-selected="false">
                    <i class="bx bx-gift me-1"></i>
                    @Localizer["Offers", "Car"]
                </button>
            </li>
        </ul>

        <div class="tab-content pt-4 pb-5" id="carDetailsTabsContent">
            <!-- Details Tab -->
            <div class="tab-pane fade show active @textAlign" id="details" role="tabpanel" aria-labelledby="details-tab">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <dl class="row">
                            <dt class="col-sm-4 col-lg-3">@Localizer["Description", "Car"]:</dt>
                            <dd class="col-sm-8 col-lg-9">@(isRightToLeft ? Model.DescrptionAr : Model.DescrptionEn)</dd>

                            @if (Model.ModelYear != null)
                            {
                                <dt class="col-sm-4 col-lg-3">@Localizer["ModelYear", "Car"]:</dt>
                                <dd class="col-sm-8 col-lg-9">@Model.ModelYear.Name</dd>
                            }

                            @if (Model.EnginePosition != null)
                            {
                                <dt class="col-sm-4 col-lg-3">@Localizer["EnginePosition", "Car"]:</dt>
                                <dd class="col-sm-8 col-lg-9">@(isRightToLeft ? Model.EnginePosition.NameAr : Model.EnginePosition.NameEn)</dd>
                            }

                            @if (Model.TransmissionType != null)
                            {
                                <dt class="col-sm-4 col-lg-3">@Localizer["TransmissionType", "Car"]:</dt>
                                <dd class="col-sm-8 col-lg-9">@(isRightToLeft ? Model.TransmissionType.NameAr : Model.TransmissionType.NameEn)</dd>
                            }

                            @if (Model.EngineSize != null)
                            {
                                <dt class="col-sm-4 col-lg-3">@Localizer["EngineSize", "Car"]:</dt>
                                <dd class="col-sm-8 col-lg-9">@(isRightToLeft ? Model.EngineSize.NameAr : Model.EngineSize.NameEn)</dd>
                            }

                            @if (Model.Option != null)
                            {
                                <dt class="col-sm-4 col-lg-3">@Localizer["Option", "Car"]:</dt>
                                <dd class="col-sm-8 col-lg-9">@(isRightToLeft ? Model.Option.NameAr : Model.Option.NameEn)</dd>
                            }

                            @if (Model.Origin != null)
                            {
                                <dt class="col-sm-4 col-lg-3">@Localizer["Origin", "Car"]:</dt>
                                <dd class="col-sm-8 col-lg-9">@(isRightToLeft ? Model.Origin.NameAr : Model.Origin.NameEn)</dd>
                            }
                        </dl>
                    </div>
                </div>
            </div>

            <!-- Specifications Tab -->
            <div class="tab-pane fade @textAlign" id="specifications" role="tabpanel" aria-labelledby="specifications-tab">
                <div class="card shadow-sm">
                    <div class="card-body">
                        @if (Model.Specifications != null && Model.Specifications.Any())
                        {
                            <div class="row">
                                @foreach (var specification in Model.Specifications)
                                {
                                    <div class="col-md-6 mb-3">
                                        <div class="d-flex align-items-center">
                                            <i class="bx bx-check-circle text-success me-2"></i>
                                            <span>@(isRightToLeft ? specification.NameAr : specification.NameEn)</span>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="text-center py-4">
                                <i class="bx bx-info-circle text-muted" style="font-size: 3rem;"></i>
                                <p class="text-muted mt-2">@Localizer["NoSpecificationsAvailable", "Car"]</p>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Offers Tab -->
            <div class="tab-pane fade @textAlign" id="offers" role="tabpanel" aria-labelledby="offers-tab">
                <div class="card shadow-sm">
                    <div class="card-body">
                        @if (Model.Offer != null && Model.Offer.Any())
                        {
                            <div class="row">
                                @foreach (var offer in Model.Offer)
                                {
                                    <div class="col-md-6 mb-3">
                                        <div class="card border-primary">
                                            <div class="card-body p-3">
                                                <div class="d-flex align-items-center">
                                                    <i class="bx bx-gift text-primary me-2"></i>
                                                    <span class="fw-medium">@(isRightToLeft ? offer.NameAr : offer.NameEn)</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="text-center py-4">
                                <i class="bx bx-gift text-muted" style="font-size: 3rem;"></i>
                                <p class="text-muted mt-2">@Localizer["NoOffersAvailable", "Car"]</p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Back to List Button -->
    <div class="text-center py-4">
        <a href="@Url.Action("Index")" class="btn btn-outline-primary">
            <i class="bx bx-arrow-back"></i>
            @Localizer["BackToList", "Common"]
        </a>
    </div>
</div>

<!-- Custom Styles -->
<style>
    .color-swatch {
        width: 25px;
        height: 25px;
        display: inline-block;
        border-radius: 50%;
        border: 2px solid #ddd;
        cursor: pointer;
        transition: transform 0.2s;
    }

        .color-swatch:hover {
            transform: scale(1.1);
            border-color: #007bff;
        }

    .thumbnail-container {
        cursor: pointer;
        transition: all 0.2s;
        display: block;
        text-decoration: none;
    }

        .thumbnail-container:hover {
            transform: scale(1.05);
            box-shadow: 0 2px 8px rgba(0,0,0,0.15);
        }

    .info-item {
        margin-bottom: 12px;
        padding-bottom: 8px;
        border-bottom: 1px solid #f0f0f0;
    }

        .info-item:last-child {
            border-bottom: none;
        }

    .info-label {
        font-weight: 600;
        color: #495057;
        margin-right: 8px;
    }

    .info-value {
        color: #212529;
    }

    .nav-tabs .nav-link {
        border: none;
        color: #6c757d;
        font-weight: 500;
    }

        .nav-tabs .nav-link.active {
            background-color: #fff;
            border-bottom: 2px solid #007bff;
            color: #007bff;
        }

    .tab-content .card {
        border: none;
        background-color: #f8f9fa;
    }

    .gallery-thumbnails {
        max-height: 80px;
        overflow-x: auto;
    }

</style>

<!-- Scripts -->
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Initialize tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });
    });

    // Language switching function
    function switchLanguage(languageCode) {
        // Create a form to change culture
        const form = document.createElement('form');
        form.method = 'POST';
        form.action = '/Home/SetLanguage';

        const input = document.createElement('input');
        input.type = 'hidden';
        input.name = 'culture';
        input.value = languageCode;

        const returnUrl = document.createElement('input');
        returnUrl.type = 'hidden';
        returnUrl.name = 'returnUrl';
        returnUrl.value = window.location.pathname + window.location.search;

        form.appendChild(input);
        form.appendChild(returnUrl);
        document.body.appendChild(form);
        form.submit();
    }

    // Image gallery functionality
    function swapImage(element) {
        const mainImage = document.getElementById("mainImage");
        const thumbnailImg = element.querySelector('img');

        if (mainImage && thumbnailImg) {
            const tempSrc = mainImage.src;
            mainImage.src = thumbnailImg.src;
            thumbnailImg.src = tempSrc;

            // Update alt text
            mainImage.alt = thumbnailImg.alt;
        }
    }

    // Add loading states for action buttons
    document.querySelectorAll('.btn').forEach(button => {
        button.addEventListener('click', function(e) {
            if (this.getAttribute('data-bs-toggle') || this.href || this.type === 'submit') {
                return; // Don't add loading state for navigation or form buttons
            }

            this.disabled = true;
            const originalText = this.innerHTML;
            this.innerHTML = '<span class="spinner-border spinner-border-sm me-1" role="status" aria-hidden="true"></span>' + this.textContent;

            setTimeout(() => {
                this.disabled = false;
                this.innerHTML = originalText;
            }, 2000);
        });
    });
</script>
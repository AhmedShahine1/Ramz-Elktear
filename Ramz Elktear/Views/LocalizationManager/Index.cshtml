@model Ramz_Elktear.core.DTO.LocalizationModel.LocalizationManagementViewModel

<div class="container-fluid">
    <h1 class="mt-4">@ViewData["Title"]</h1>
    
    <!-- Success/Error Messages from TempData -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["InfoMessage"] != null)
    {
        <div class="alert alert-info alert-dismissible fade show" role="alert">
            @TempData["InfoMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row">
        <div class="col-lg-12">
            <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <div>
                        <i class="bx bx-language me-1"></i>
                        Localization Resources
                    </div>
                    <div>
                        <button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#createResourceModal">
                            <i class="bx bx-plus me-1"></i> Add New Resource
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    <!-- Search, Filter, and Export Controls -->
                    <div class="row search-container">
                        <div class="col-md-8">
                            <form asp-action="Index" method="get" class="d-flex">
                                <div class="input-group me-2">
                                    <input type="text" name="searchString" class="form-control" placeholder="Search resources..." value="@Model.SearchString">
                                    <button class="btn btn-outline-secondary" type="submit">
                                        <i class="bx bx-search"></i>
                                    </button>
                                </div>
                                <select name="group" class="form-select me-2" onchange="this.form.submit()">
                                    <option value="">All Groups</option>
                                    @foreach (var group in Model.Groups)
                                    {
                                        @if (ViewData["CurrentGroup"]?.ToString() == group)
                                        {
                                            <option value="@group" selected>@group</option>
                                        }
                                        else
                                        {
                                            <option value="@group">@group</option>
                                        }
                                    }
                                </select>
                            </form>
                        </div>
                        <div class="col-md-4 text-end">
                            <div class="btn-group btn-group-sm" role="group">
                                <button type="button" class="btn btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="bx bx-file-export me-1"></i> Export
                                </button>
                                <ul class="dropdown-menu dropdown-menu-end">
                                    <li>
                                        <a class="dropdown-item" href="@Url.Action("Export", new { format = "json", group = Model.CurrentGroup })">
                                            <i class="bx bx-file-code me-1"></i> Export as JSON
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" href="@Url.Action("Export", new { format = "csv", group = Model.CurrentGroup })">
                                            <i class="bx bx-file-csv me-1"></i> Export as CSV
                                        </a>
                                    </li>
                                </ul>
                            </div>
                            <div class="btn-group btn-group-sm ms-2" role="group">
                                <button type="button" class="btn btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="bx bx-cog me-1"></i> Actions
                                </button>
                                <ul class="dropdown-menu dropdown-menu-end">
                                    <li>
                                        <button type="button" class="dropdown-item" data-bs-toggle="modal" data-bs-target="#importModal">
                                            <i class="bx bx-file-import me-1"></i> Import Resources
                                        </button>
                                    </li>
                                    <li>
                                        <form asp-action="RefreshCache" asp-controller="LocalizationManager" method="post" id="refreshCacheForm">
                                            @Html.AntiForgeryToken()
                                            <button type="button" class="dropdown-item" onclick="confirmRefreshCache()">
                                                <i class="bx bx-sync me-1"></i> Refresh Cache
                                            </button>
                                        </form>
                                    </li>
                                    <li>
                                        <form asp-action="ScanMissingKeys" asp-controller="LocalizationManager" method="post" id="scanMissingKeysForm">
                                            @Html.AntiForgeryToken()
                                            <button type="button" class="dropdown-item" onclick="confirmScanMissingKeys()">
                                                <i class="bx bx-search me-1"></i> Scan Missing Keys
                                            </button>
                                        </form>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>

                    <!-- Resources Table -->
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>Key</th>
                                    <th>Group</th>
                                    <th>Description</th>
                                    <th>Value</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.Resources != null && Model.Resources.Any())
                                {
                                    foreach (var resource in Model.Resources)
                                    {
                                        <tr>
                                            <td>@resource.ResourceKey</td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(resource.ResourceGroup))
                                                {
                                                    <span class="badge bg-info badge-group">@resource.ResourceGroup</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">--</span>
                                                }
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(resource.Description))
                                                {
                                                    <span>@(resource.Description.Length > 50 ? resource.Description.Substring(0, 47) + "..." : resource.Description)</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">--</span>
                                                }
                                            </td>
                                            <td>
                                                @if (resource.Values.Any())
                                                {
                                                    <div class="localization-values">
                                                        @foreach (var value in resource.Values.Take(2))
                                                        {
                                                            <div class="d-flex align-items-center mb-1">
                                                                <span class="badge bg-secondary me-2">@value.CultureCode</span>
                                                                <span class="localization-value text-truncate"
                                                                      title="@value.Value">@value.Value</span>
                                                            </div>
                                                        }
                                                        @if (resource.Values.Count > 2)
                                                        {
                                                            <button type="button"
                                                                    class="btn btn-sm btn-outline-info mt-1"
                                                                    onclick="viewAllTranslations(@resource.Id)"
                                                                    data-bs-toggle="tooltip"
                                                                    title="View all @resource.Values.Count translations">
                                                                <i class="bx bx-globe me-1"></i> View all (@resource.Values.Count)
                                                            </button>
                                                        }
                                                    </div>
                                                }
                                                else
                                                {
                                                    <span class="text-danger">
                                                        <i class="bx bx-error-circle me-1"></i>No translations
                                                    </span>
                                                }
                                            </td>
                                            <td>
                                                <button type="button" class="btn btn-sm btn-outline-primary" 
                                                        onclick="editResource(@resource.Id)" 
                                                        title="Edit">
                                                    <i class="bx bx-edit"></i>
                                                </button>
                                                <button type="button" class="btn btn-sm btn-outline-danger" 
                                                        onclick="confirmDelete(@resource.Id, '@resource.ResourceKey')" 
                                                        title="Delete">
                                                    <i class="bx bx-trash"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="6" class="text-center">No localization resources found.</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <!-- Pagination -->
                    @if (Model.TotalPages > 1)
                    {
                        <div class="pagination-container d-flex justify-content-center">
                            <nav aria-label="Page navigation">
                                <ul class="pagination">
                                    @if (Model.CurrentPage > 1)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage - 1, searchString = Model.SearchString, group = Model.CurrentGroup })">
                                                <i class="bx bx-chevron-left"></i>
                                            </a>
                                        </li>
                                    }

                                    @{
                                        int startPage = Math.Max(1, Model.CurrentPage - 2);
                                        int endPage = Math.Min(Model.TotalPages, startPage + 4);
                                        
                                        if (endPage - startPage < 4 && startPage > 1)
                                        {
                                            startPage = Math.Max(1, endPage - 4);
                                        }
                                    }

                                    @if (startPage > 1)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Action("Index", new { page = 1, searchString = Model.SearchString, group = Model.CurrentGroup })">1</a>
                                        </li>
                                        @if (startPage > 2)
                                        {
                                            <li class="page-item disabled">
                                                <span class="page-link">...</span>
                                            </li>
                                        }
                                    }

                                    @for (int i = startPage; i <= endPage; i++)
                                    {
                                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                            <a class="page-link" href="@Url.Action("Index", new { page = i, searchString = Model.SearchString, group = Model.CurrentGroup })">@i</a>
                                        </li>
                                    }

                                    @if (endPage < Model.TotalPages)
                                    {
                                        @if (endPage < Model.TotalPages - 1)
                                        {
                                            <li class="page-item disabled">
                                                <span class="page-link">...</span>
                                            </li>
                                        }
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Action("Index", new { page = Model.TotalPages, searchString = Model.SearchString, group = Model.CurrentGroup })">@Model.TotalPages</a>
                                        </li>
                                    }

                                    @if (Model.CurrentPage < Model.TotalPages)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage + 1, searchString = Model.SearchString, group = Model.CurrentGroup })">
                                                <i class="bx bx-chevron-right"></i>
                                            </a>
                                        </li>
                                    }
                                </ul>
                            </nav>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Create Resource Modal -->
<div class="modal fade" id="createResourceModal" tabindex="-1" aria-labelledby="createResourceModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form asp-action="Create" method="post">
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="createResourceModalLabel">Create New Localization Resource</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="Resource_ResourceKey" class="form-label">Resource Key <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="Resource_ResourceKey" name="Resource.ResourceKey" required 
                               maxlength="255" placeholder="e.g. Common.ButtonSave">
                        <div class="invalid-feedback">Resource key is required.</div>
                    </div>
                    <div class="form-group">
                        <label for="Resource_ResourceGroup" class="form-label">Resource Group</label>
                        <input type="text" class="form-control" id="Resource_ResourceGroup" name="Resource.ResourceGroup" 
                               maxlength="100" placeholder="e.g. Common, Admin, Shop">
                    </div>
                    <div class="form-group">
                        <label for="Resource_Description" class="form-label">Description</label>
                        <textarea class="form-control" id="Resource_Description" name="Resource.Description" 
                                  maxlength="500" rows="2" placeholder="Optional description"></textarea>
                    </div>

                    <hr />
                    <h6>Language Values</h6>
                    <div class="language-values">
                        <div id="createLanguageValues">
                            <div class="row mb-3" id="createLangRow0">
                                <div class="col-md-3">
                                    <input type="text" class="form-control" name="Values[0].CultureCode" 
                                           placeholder="en-US" required maxlength="10">
                                </div>
                                <div class="col-md-8">
                                    <input type="text" class="form-control" name="Values[0].Value" 
                                           placeholder="Translation value" required>
                                </div>
                                <div class="col-md-1">
                                    <button type="button" class="btn btn-outline-danger btn-sm w-100" 
                                            onclick="removeLanguageRow('createLangRow0')" disabled>
                                        <i class="bx bx-times"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                        <button type="button" class="btn btn-outline-primary btn-sm" onclick="addLanguageRow('create')">
                            <i class="bx bx-plus me-1"></i> Add Language
                        </button>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Create</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Resource Modal -->
<div class="modal fade" id="editResourceModal" tabindex="-1" aria-labelledby="editResourceModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form asp-action="Edit" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" id="edit_Resource_Id" name="Resource.Id" value="">
                <div class="modal-header">
                    <h5 class="modal-title" id="editResourceModalLabel">Edit Localization Resource</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="edit_Resource_ResourceKey" class="form-label">Resource Key <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="edit_Resource_ResourceKey" name="Resource.ResourceKey" required 
                               maxlength="255">
                        <div class="invalid-feedback">Resource key is required.</div>
                    </div>
                    <div class="form-group">
                        <label for="edit_Resource_ResourceGroup" class="form-label">Resource Group</label>
                        <input type="text" class="form-control" id="edit_Resource_ResourceGroup" name="Resource.ResourceGroup" 
                               maxlength="100">
                    </div>
                    <div class="form-group">
                        <label for="edit_Resource_Description" class="form-label">Description</label>
                        <textarea class="form-control" id="edit_Resource_Description" name="Resource.Description" 
                                  maxlength="500" rows="2"></textarea>
                    </div>

                    <hr />
                    <h6>Language Values</h6>
                    <div class="language-values">
                        <div id="editLanguageValues">
                            <!-- Will be populated dynamically when editing -->
                        </div>
                        <button type="button" class="btn btn-outline-primary btn-sm" onclick="addLanguageRow('edit')">
                            <i class="bx bx-plus me-1"></i> Add Language
                        </button>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Import Modal -->
<div class="modal fade" id="importModal" tabindex="-1" aria-labelledby="importModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="Import" method="post" enctype="multipart/form-data">
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="importModalLabel">Import Localization Resources</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="importFile" class="form-label">Select File (JSON or CSV) <span class="text-danger">*</span></label>
                        <input type="file" class="form-control" id="importFile" name="file" accept=".json,.csv" required>
                        <div class="form-text">
                            <ul class="mb-0 ps-3">
                                <li>Maximum file size: 5MB</li>
                                <li>Supported formats: JSON, CSV</li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Import</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="Delete" method="post" id="deleteForm">
                @Html.AntiForgeryToken()
                <input type="hidden" id="deleteResourceId" name="id" value="">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete the resource with key "<span id="deleteResourceKey"></span>"?</p>
                    <p class="text-danger">This action cannot be undone.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script>
        // Configuration for toastr notifications
        toastr.options = {
            "closeButton": true,
            "progressBar": true,
            "positionClass": "toast-top-right",
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000"
        };

        // Show toastr for TempData messages
        $(document).ready(function() {
            @if (TempData["SuccessMessage"] != null)
            {
                <text>toastr.success('@TempData["SuccessMessage"]');</text>
            }
            @if (TempData["ErrorMessage"] != null)
            {
                <text>toastr.error('@TempData["ErrorMessage"]');</text>
            }
            @if (TempData["InfoMessage"] != null)
            {
                <text>toastr.info('@TempData["InfoMessage"]');</text>
            }
        });

        // Global counter for language row indexes
        let createRowIndex = 1;
        let editRowIndex = 0;

        // Add a new language row to the form
        function addLanguageRow(formType) {
            let rowIndex = formType === 'create' ? createRowIndex++ : editRowIndex++;
            let container = $(`#${formType}LanguageValues`);
            let rowId = `${formType}LangRow${rowIndex}`;
            
            let html = `
                <div class="row mb-3" id="${rowId}">
                    <div class="col-md-3">
                        <input type="text" class="form-control" name="Values[${rowIndex}].CultureCode" 
                               placeholder="en-US" required maxlength="10">
                    </div>
                    <div class="col-md-8">
                        <input type="text" class="form-control" name="Values[${rowIndex}].Value" 
                               placeholder="Translation value" required>
                    </div>
                    <div class="col-md-1">
                        <button type="button" class="btn btn-outline-danger btn-sm w-100" 
                                onclick="removeLanguageRow('${rowId}')">
                            <i class="bx bx-times"></i>
                        </button>
                    </div>
                </div>
            `;
            
            container.append(html);
        }

        // Remove a language row from the form
        function removeLanguageRow(rowId) {
            $(`#${rowId}`).remove();
        }

        // Edit resource - fetch and populate modal
        function editResource(id) {
            // Reset form
            $('#editLanguageValues').empty();
            editRowIndex = 0;
            
            // Fetch resource data
            $.ajax({
                url: '@Url.Action("GetEditModel")/' + id,
                type: 'GET',
                success: function(data) {
                    if (data) {
                        // Populate form fields
                        $('#edit_Resource_Id').val(data.resource.id);
                        $('#edit_Resource_ResourceKey').val(data.resource.resourceKey);
                        $('#edit_Resource_ResourceGroup').val(data.resource.resourceGroup);
                        $('#edit_Resource_Description').val(data.resource.description);
                        
                        // Add language values
                        if (data.values && data.values.length > 0) {
                            for (let i = 0; i < data.values.length; i++) {
                                let value = data.values[i];
                                let rowId = `editLangRow${editRowIndex}`;
                                
                                let html = `
                                    <div class="row mb-3" id="${rowId}">
                                        <input type="hidden" name="Values[${editRowIndex}].Id" value="${value.id}">
                                        <div class="col-md-3">
                                            <input type="text" class="form-control" name="Values[${editRowIndex}].CultureCode" 
                                                   value="${value.cultureCode}" required maxlength="10">
                                        </div>
                                        <div class="col-md-8">
                                            <input type="text" class="form-control" name="Values[${editRowIndex}].Value" 
                                                   value="${value.value.replace(/"/g, '&quot;')}" required>
                                        </div>
                                        <div class="col-md-1">
                                            <button type="button" class="btn btn-outline-danger btn-sm w-100" 
                                                    onclick="removeLanguageRow('${rowId}')" 
                                                    ${data.values.length === 1 ? 'disabled' : ''}>
                                                <i class="bx bx-times"></i>
                                            </button>
                                        </div>
                                    </div>
                                `;
                                
                                $('#editLanguageValues').append(html);
                                editRowIndex++;
                            }
                        } else {
                            // Add empty row if no values
                            addLanguageRow('edit');
                        }
                        
                        // Show modal
                        $('#editResourceModal').modal('show');
                    } else {
                        toastr.error('Failed to load resource data.');
                    }
                },
                error: function() {
                    toastr.error('Error fetching resource data.');
                }
            });
        }

        // Confirm delete
        function confirmDelete(id, key) {
            $('#deleteResourceId').val(id);
            $('#deleteResourceKey').text(key);
            $('#deleteModal').modal('show');
        }

        // Confirm refresh cache
        function confirmRefreshCache() {
            if (confirm('Are you sure you want to refresh the localization cache?')) {
                $('#refreshCacheForm').submit();
            }
        }

        // Confirm scan missing keys
        function confirmScanMissingKeys() {
            if (confirm('Are you sure you want to scan for missing localization keys? This may take a moment.')) {
                $('#scanMissingKeysForm').submit();
            }
        }
    </script>
}